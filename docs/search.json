[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "StarryAri7.github.io",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "MiniMapProject.html",
    "href": "MiniMapProject.html",
    "title": "Mini Mapping Project",
    "section": "",
    "text": "library(tidyverse) #for data manipulation\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(leaflet) #for interactive mapping\nlibrary(ggspatial) #for mapping\nlibrary(sf) #for mapping\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(ggthemes) #for setting my static maps design\n\n\n#State Boundaries\nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") |&gt;\n  select(name, geometry)\n\n# Shoutout Prof. B-V for teaching me how to do this! This is my numeric dataset\npublicland &lt;- read_csv(\"https://raw.githubusercontent.com/StarryAri7/SDS264_F24/refs/heads/main/data/2018%20land%20cover.csv\") |&gt; \n# The data had % signs in it and was categorical, which wouldn't work for \n# my purposes, this removes that issue\n  mutate(federal_land_pcnt = str_replace(federal_land_pcnt, \"%\", \"\"),\n         federal_land_pcnt = as.numeric(federal_land_pcnt),\n         change_1990 = str_replace(change_1990, \"%\", \"\"),\n         change_1990 = as.numeric(change_1990))\n\nRows: 51 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): State, federal_land_pcnt, change_1990, label\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# This joins my numeric dataset to the state boundaries \npublicland &lt;- states_sf |&gt; left_join(publicland, by = c(\"name\" = \"State\"))\n\n#My Federal Land data was taken from a 2018 report by congress found at \n#https://crsreports.congress.gov/product/pdf/r/r42346#:~:text=The%20amount%20\n#and%20percentage%20of%20federally%20owned,use%20in%20that%20part%20of%20the%20\n#country.\n# I used table 4\n\n# This is my categorical dataset!\nbirds &lt;- read_csv(\"https://raw.githubusercontent.com/StarryAri7/SDS264_F24/refs/heads/main/data/birds.csv\") \n\nRows: 50 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): State, family, state_bird, simplified, label\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# This again joins it to the state boundaries\nbirdsstates &lt;- states_sf |&gt; left_join(birds, by = c(\"name\" = \"State\"))\n\n# My bird data was found at https://www.50states.com/bird/ \n# The website is interesting, but I double checked the data!\n\n\n# For my static map I really wanted to find a way to include Alaska and Hawaii, \n# this leads to some strange/redundant looking code at times\n\n# To start, I \nmainland2 &lt;- publicland |&gt;\n  #This sets a better CRS, as the main one is very distorted \n st_transform(\"+init=epsg:8901\") |&gt;\n  # I remove Alaska and Hawaii here to just make a base map with the lower 48\n  filter(name != \"Alaska\", name != \"Hawaii\") |&gt;\nggplot() +\n  geom_sf(aes(fill = change_1990), lwd = .7, alpha = .8) +\n  # I set a binned diverging color scale here, and some clean breaks\n  # Iowa is a big outlier at 193% here, causing the huge jump from 50 to 200\n  scale_fill_fermenter(palette = \"BrBG\",\n                     direction=1,\n                     limits=c(-20,200), \n                    breaks = c(-20,-15,-10,-5,0,5,30,50,200)) + \n  labs(title = \"   % Change in Federal Land from 1990 to 2018\",\n       x = \"Longitude\",\n       y = \"Latitude\",\n       # This kept running into the text, so I added a linebreak\n       fill = \"% Change\\n\") +\n  # This moves the bounding box of the map to allow space for Alaska and Hawaii\n  coord_sf(xlim = c(-135,-65),\n           ylim = c(23,50)) +\n  # This theme works very well to provide an empty background and axes Lat/Long\n  # It is also worth noting that Hawaii and alaska don't have accurate lats +\n  # longs listed, but I couldn't figure out a way to make it work, let alone\n  # in a nice looking way\n  theme_base()  +\n  # These are some fine tuned changes I made, I set the background as blue \n  # instead of having a satellite background to make the input of Alaska and\n  # Hawaii more seamless, \n  theme(panel.background = element_rect(fill = 'lightblue'),\n        # I changed the size of the legend text and title so they wouldn't bleed\n        legend.title = element_text( size=12), \n        legend.text=element_text(size=10),\n        # I angled the Longitude so it wouldn't overlap\n        axis.text.x = element_text(angle = 25, vjust = .8),\n        title = element_text(size = 12)\n        )\n\nWarning in CPL_crs_from_input(x): GDAL Message 1: +init=epsg:XXXX syntax is\ndeprecated. It might return a CRS with a non-EPSG compliant axis order.\n\npublic_alaska2  &lt;- publicland |&gt;\n  filter(name == \"Alaska\") |&gt;\n  ggplot() +\n  # I hid the legend here as to clean up the smaller map\n     geom_sf(aes(fill = change_1990),show.legend = FALSE, lwd = .7) +\n  # This centers the crs on Alaska and sets a custom limit so alaska isn't \n  # touching the edge of the box\n     coord_sf(crs = st_crs(3467), xlim = c(-2400000, 1600000), ylim = c(200000, \n         2500000)) +\n  # This is a duplicate of the above color palette to ensure consistency, as \n  # this technically only contains data for Alaska now\n    scale_fill_fermenter(palette = \"BrBG\",\n                     direction=1,\n                     limits=c(-20,200), \n                    breaks = c(-20,-10,-15,-5,0,5,30,50,200)) + \n  # Removes axis to prevent lots of awful lines from appearing \n  theme_void() +\n  # Sets the background to blue to match the other map\n  theme(panel.background = element_rect(fill = 'lightblue'))\n     \npublic_hawaii2  &lt;- publicland |&gt;\n   filter(name == \"Hawaii\") |&gt;\n  ggplot() +\n     geom_sf(aes(fill = change_1990),show.legend = FALSE, lwd = .7) +\n   # Same as above, centered on Hawaii and clipped, added expand = FALSE, \n   # to make it a little bigger, as it was shrinking the islands too much\n     coord_sf(crs = st_crs(4135), xlim = c(-161, -154), ylim = c(18, \n         23),expand = FALSE) +\n  # Same as above\n    scale_fill_fermenter(palette = \"BrBG\",\n                     direction=1,\n                     limits=c(-20,200), \n                    breaks = c(-20,-10,-15,-5,0,5,30,50,200)) + \n  # Same as above\n    theme_void() +\n  # Same as above\n  theme(panel.background = element_rect(fill = 'lightblue'))\n  \n# This plots our main map\nmainland2 +\n  # This is a common way I found to overlay plots, it states the ggplot as a \n  # grob with a bounding box, and I then manipulated its size and location\n annotation_custom(\n      grob = ggplotGrob(public_alaska2),\n      xmin = -137.5,\n      xmax = -120,\n      ymin = 13,\n      ymax = 40) +\n  # And repeated again here for Hawaii!\n  annotation_custom(\n      grob = ggplotGrob(public_hawaii2),\n      xmin = -119,\n      xmax = -106,\n      ymin = 13, \n      ymax = 40)\n\n\n\n\n\nAlt-text / Description\nThis is a chloropleth map of the United States of America, the X and Y axis are longitude and latitude, respectively. Alaska and Hawaii have been moved to the bottom left of the map for clarity of sight. Each state is filled with a color based on the percentage of change in federal land from 1990 to 2018. They range from -20% (a decrease in federal land) to 193% (a large increase in federal land). The biggest takeaway is that the majority of states have changed no more than 5% in the positive or negative direction. the pacific northwest seems to have gained land slightly, while the southwest states have all lost land, with Arizona having decreased the most in the country. The eastern side of the US, has largely made gains from 1% up to 70% in Maine.\n\n# This is by and large the same technique as last time, so I will only\n# highlight how the code changes here\nbird_mainland &lt;- birdsstates |&gt;\n  drop_na(family) |&gt;\n  # I ordered the data to appear by number of rows in the dataset (popularity)\n  mutate(family = fct_infreq(family)) |&gt;\n st_transform(\"+init=epsg:8901\") |&gt;\n  # I had originally wanted to filter out Alaska and Hawaii out here, but then\n  # the legend would be missing a line, so I removed this line, and technically\n  # Alaska and Hawaii are loaded twice, once out of frame!\n  # filter(name != \"Alaska\", name != \"Hawaii\") |&gt;\nggplot() +\n  geom_sf(aes(fill = family), lwd = .7, alpha = .8) +\n  labs(title = \"Each US States' Bird by Family\",\n       x = \"Longitude\",\n       y = \"Latitude\",\n       fill = \"Family (by popularity)\") +\n  # I had to manually set the color scale here, as even by simplifying birds to\n  # their family, there were still 16 levels, but I chose a set of colors I\n  # felt could be easily distinguished\n  scale_fill_manual(values = c(\"Anatidae\" = \"green4\", #nene\n                              \"Cardinalidae\" = \"#E31A1C\", #cardinal\n                              \"Cuculidae\" = \"khaki3\", #roadrunner\n                              \"Fringillidae\" = \"gold1\", #goldfinches (+1)\n                              \"Gaviidae\" = \"black\",#loon\n                              \"Icteridae\" = \"deeppink1\", #meadowlark\n                              \"Laridae\" = \"white\", #gull\n                              \"Mimidae\" = \"gray60\", #mockingbird\n                              \"Paridae\" = \"#FB9A99\", #chickadee\n                              \"Passerellidae\" = \"steelblue4\", #lark bunting\n                              \"Pelecanidae\" = \"#6A3D9A\", # pelican\n                              \"Phasianidae\" = \"#FF7F00\", #pheasants\n                              \"Picidae\" = \"#CAB2D6\", #flicker\n                              \"Troglodytidae\" = \"darkorange4\", #wrens\n                              \"Turdidae\" = \"darkturquoise\", #bluebirds and robins\n                              \"Tyrannidae\" = \"palegreen2\" #flycatcher  \n                              )) +\n  # Due to the aforementioned issue with needing to leave Hawaii and Alaska in\n  # off-screen, I had to manually reset the visual field\n  coord_sf(xlim = c(-135,-65),\n           ylim = c(23,50)) +\n  theme_base()  +\n  theme(panel.background = element_rect(fill = 'lightblue'),\n        legend.title = element_text( size=15), legend.text=element_text(size=10),\n        axis.text.x = element_text(angle = 25, vjust = .8)) +\n  # I added this line to create 2 colimns of the legend, to make it more clean\n  # and readable. Conviniently, the first column is all families that appear \n  # 2 or more times, and families in the second column each only appear once!\n  guides(fill = guide_legend(nrow = 8)) \n\n\n\n# Again, very similar to my last static map\nbird_alaska  &lt;- birdsstates |&gt;\n  filter(name == \"Alaska\") |&gt;\n  ggplot() +\n     geom_sf(aes(fill = family),show.legend = FALSE, lwd = .7) +\n     coord_sf(crs = st_crs(3467), xlim = c(-2400000, 1600000), ylim = c(200000, \n         2500000)) +\n  # Set the same color scale, so it would know how to color the state in context\n   scale_fill_manual(values = c(\"Anatidae\" = \"green4\", #nene\n                              \"Cardinalidae\" = \"#E31A1C\", #cardinal\n                              \"Cuculidae\" = \"khaki3\", #roadrunner\n                              \"Fringillidae\" = \"gold1\", #goldfinches (+1)\n                              \"Gaviidae\" = \"black\",#loon\n                              \"Icteridae\" = \"deeppink1\", #meadowlark\n                              \"Laridae\" = \"white\", #gull\n                              \"Mimidae\" = \"gray60\", #mockingbird\n                              \"Paridae\" = \"#FB9A99\", #chickadee\n                              \"Passerellidae\" = \"steelblue4\", #lark bunting\n                              \"Pelecanidae\" = \"#6A3D9A\", # pelican\n                              \"Phasianidae\" = \"#FF7F00\", #pheasants\n                              \"Picidae\" = \"#CAB2D6\", #flicker\n                              \"Troglodytidae\" = \"darkorange4\", #wrens\n                              \"Turdidae\" = \"darkturquoise\", #bluebirds and robins\n                              \"Tyrannidae\" = \"palegreen2\" )) +\n  theme_void() +\n  theme(panel.background = element_rect(fill = 'lightblue'))\n     \n# This is all the same\nbird_hawaii  &lt;- birdsstates |&gt;\n   filter(name == \"Hawaii\") |&gt;\n  ggplot() +\n     geom_sf(aes(fill = family),show.legend = FALSE, lwd = .7) +\n     coord_sf(crs = st_crs(4135), xlim = c(-161, -154), ylim = c(18, \n         23), expand = FALSE) +\n   scale_fill_manual(values = c(\"Anatidae\" = \"green4\", #nene\n                              \"Cardinalidae\" = \"#E31A1C\", #cardinal\n                              \"Cuculidae\" = \"khaki3\", #roadrunner\n                              \"Fringillidae\" = \"gold1\", #goldfinches (+1)\n                              \"Gaviidae\" = \"black\",#loon\n                              \"Icteridae\" = \"deeppink1\", #meadowlark\n                              \"Laridae\" = \"white\", #gull\n                              \"Mimidae\" = \"gray60\", #mockingbird\n                              \"Paridae\" = \"#FB9A99\", #chickadee\n                              \"Passerellidae\" = \"steelblue4\", #lark bunting\n                              \"Pelecanidae\" = \"#6A3D9A\", # pelican\n                              \"Phasianidae\" = \"#FF7F00\", #pheasants\n                              \"Picidae\" = \"#CAB2D6\", #flicker\n                              \"Troglodytidae\" = \"darkorange4\", #wrens\n                              \"Turdidae\" = \"darkturquoise\", #bluebirds and robins\n                              \"Tyrannidae\" = \"palegreen2\" )) +\n    theme_void() +\n  theme(panel.background = element_rect(fill = 'lightblue'))\n  \n# I used the same setup and scale down here as well\nbird_mainland +\n annotation_custom(\n      grob = ggplotGrob(bird_alaska),\n      xmin = -137.5,\n      xmax = -120,\n      ymin = 13,\n      ymax = 40) +\n  annotation_custom(\n      grob = ggplotGrob(bird_hawaii),\n      xmin = -119,\n      xmax = -106,\n      ymin = 13, \n      ymax = 40)\n\n\n\n# This map generates weird with the legend, so the sizing is a little off.\n# The rotation of X axis is maybe not needed but it looks bad in the mini\n# viewer, so I elected to keep it\n\nA major insight from this map is that many regions of states choose birds within the same family, implying that bird likely lives within that area. this is especially true of the Icteridae (Meadow larks) in the great plains, Mimidae (mocking birds) in the south east, and Cardinalidae (Cardinals) in the central eastern region. All 3 of these birds have high concentrations in these areas, so their states seem to have chosen a local bird that they feel represents them.\n\n#I had some issues with NA's in this leaflet so I removed them all at the start\nbirdsstates &lt;- birdsstates |&gt; drop_na(family)\n\n# This sets the color palette, the same as with the static map\n  pal &lt;- colorFactor(\n    palette = c(\"Anatidae\" = \"green4\", #nene\n                \"Cardinalidae\" = \"#E31A1C\", #cardinal\n                \"Cuculidae\" = \"khaki3\", #roadrunner\n                \"Fringillidae\" = \"gold1\", #goldfinches (+1)\n                \"Gaviidae\" = \"black\",#loon\n                \"Icteridae\" = \"deeppink1\", #meadowlark\n                \"Laridae\" = \"white\", #gull\n                \"Mimidae\" = \"gray60\", #mockingbird\n                \"Paridae\" = \"#FB9A99\", #chickadee\n                \"Passerellidae\" = \"steelblue4\", #lark bunting\n                \"Pelecanidae\" = \"#6A3D9A\", # pelican\n                \"Phasianidae\" = \"#FF7F00\", #pheasants\n                \"Picidae\" = \"#CAB2D6\", #flicker\n                \"Troglodytidae\" = \"darkorange4\", #wrens\n                \"Turdidae\" = \"darkturquoise\", #bluebirds and robins\n                \"Tyrannidae\" = \"palegreen2\"),\n    domain = birdsstates$family)\n\n  # I created a custom label variable so that the map could have clean labels!\n\nbirdsstates |&gt; \n  # I again ordered the legend, probably could've done this at the start...\n  mutate(family = fct_infreq(family)) |&gt;\n  leaflet() |&gt; \n  # I added the background for the intercative map\n  addProviderTiles(\"OpenStreetMap\") |&gt;\n  # Setting the view is easy with an SF, I chose this to fully show all the\n  # states, I wanted it slightly more zoomed but it only takes integers and 3\n  # is far too much\n  setView(-96, 50, 2) |&gt;\n  # This sets the state polygons defined by the geometry and colored by family\n  addPolygons(fillColor = ~pal(family),\n              weight = 2,\n              opacity = 1,\n              # I really like the white dash outline\n              color = \"white\",\n              dashArray = \"5\",\n              # I wanted a little opacity so you can see the state names!\n              fillOpacity = .7,\n              # The highlight is one of my favorite features\n              highlightOptions = highlightOptions(\n                weight = 5,\n                color = \"#666\",\n                dashArray = \"\",\n                fillOpacity = 0.7,\n                bringToFront = TRUE),\n              # Again I wanted to set cutstom clean labels, so I used this format\n              label = birdsstates$label,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 15px\"),\n      textsize = \"15px\",\n      direction = \"auto\")) |&gt;\n  # I added the legend to match the static plot\n  addLegend(pal = pal, \n            values = ~family, \n            title = \"State Bird Family\",\n            position = \"bottomright\",\n            opacity=.7) |&gt;\n  # I think the title looks nice, but it could get in the way, easily removed!\n    addPopups(-95, 50, \"Each US State's Bird, colored by Family\",\n              options = popupOptions(closeOnClick = FALSE)) |&gt;\n  # You gotta have a scale bar!\n  addScaleBar(position = \"bottomleft\")\n\n\n# Same issue with Na's\npublicland &lt;- publicland |&gt; drop_na(change_1990)\n\n# Here I set the bins for legend, and the color scale\nbins &lt;- c(-20,-15,-10,-5,0,5,30,50,200)\n  pal2 &lt;- colorBin(\"BrBG\",\n                   bins = bins )\n\n\n  \npublicland |&gt; \n  leaflet() |&gt; \n  addProviderTiles(\"OpenStreetMap\") |&gt;\n  # Same view\n  setView(-96, 50, 2) |&gt;\n  # Sets the polygons, same setup as last time\n  addPolygons(fillColor = ~pal2(change_1990),\n              weight = 2,\n              opacity = 1,\n              color = \"white\",\n              dashArray = \"5\",\n              fillOpacity = .8,\n              highlightOptions = highlightOptions(\n                weight = 5,\n                color = \"#666\",\n                dashArray = \"\",\n                fillOpacity = 0.8,\n                bringToFront = TRUE),\n              # Same custom label set up\n              label = publicland$label,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 15px\"),\n      textsize = \"15px\",\n      direction = \"auto\")) |&gt;\n  # I have to admit the negative numbers look really messy, but I'm not sure of\n  # another way to do it I would love it to be '-20 to -15' etc.\n  addLegend(pal = pal2, \n            values = ~change_1990, \n            title = \"% Change\",\n            position = \"bottomright\",\n            opacity=.8) |&gt;\n  # Same Title Setup\n      addPopups(-95, 50, \"% Change in Public Land from 1990 - 2018\",\n              options = popupOptions(closeOnClick = FALSE)) |&gt;\n  # And you just have to have that scale bar \n  # (this also helps if you remove the above line, adds a pipe catch)\n  addScaleBar(position = \"bottomleft\")"
  }
]